{
.appVersion = "3134";
.storedFileType = "public.truetype-ttf-font";
.formatVersion = 3;
customParameters = (
{
name = vendorID;
value = Alts;
},
{
name = panose;
value = (
0,
0,
4,
0,
0,
0,
0,
0,
0,
0
);
},
{
name = unicodeRanges;
value = (
0,
1,
31
);
},
{
name = codePageRanges;
value = (
"1252"
);
},
{
name = fsType;
value = (
);
},
{
name = glyphOrder;
value = (
.notdef,
.null,
CR,
space,
exclam,
quotedbl,
numbersign,
dollar,
percent,
ampersand,
quotesingle,
parenleft,
parenright,
asterisk,
plus,
comma,
hyphen,
period,
slash,
zero,
one,
two,
three,
four,
five,
six,
seven,
eight,
nine,
colon,
semicolon,
less,
equal,
greater,
question,
A,
B,
C,
D,
E,
F,
G,
H,
I,
J,
K,
L,
M,
N,
O,
P,
Q,
R,
S,
T,
U,
V,
W,
X,
Y,
Z,
bracketleft,
backslash,
bracketright,
asciicircum,
underscore,
grave,
a,
b,
c,
d,
e,
f,
g,
h,
i,
j,
k,
l,
m,
n,
o,
p,
q,
r,
s,
t,
u,
v,
w,
x,
y,
z,
braceleft,
bar,
braceright,
asciitilde,
uni00A0,
pixel,
Aacute,
Abreve,
uni1EAE,
uni1EB6,
uni1EB0,
uni1EB2,
uni1EB4,
Acircumflex,
uni1EA4,
uni1EAC,
uni1EA6,
uni1EA8,
uni1EAA,
uni1EA0,
Agrave,
uni1EA2,
Atilde,
Dcroat,
Eacute,
Ecircumflex,
uni1EBE,
uni1EC6,
uni1EC0,
uni1EC2,
uni1EC4,
uni1EB8,
Egrave,
uni1EBA,
uni1EBC,
Iacute,
uni1ECA,
Igrave,
uni1EC8,
Itilde,
Oacute,
Ocircumflex,
uni1ED0,
uni1ED8,
uni1ED2,
uni1ED4,
uni1ED6,
uni1ECC,
Ograve,
uni1ECE,
Ohorn,
uni1EDA,
uni1EE2,
uni1EDC,
uni1EDE,
uni1EE0,
Otilde,
Uacute,
uni1EE4,
Ugrave,
uni1EE6,
Uhorn,
uni1EE8,
uni1EF0,
uni1EEA,
uni1EEC,
uni1EEE,
Utilde,
Yacute,
uni1EF4,
Ygrave,
uni1EF6,
uni1EF8,
aacute,
abreve,
uni1EAF,
uni1EB7,
uni1EB1,
uni1EB3,
uni1EB5,
acircumflex,
uni1EA5,
uni1EAD,
uni1EA7,
uni1EA9,
uni1EAB,
uni1EA1,
agrave,
uni1EA3,
atilde,
dcroat,
eacute,
ecircumflex,
uni1EBF,
uni1EC7,
uni1EC1,
uni1EC3,
uni1EC5,
uni1EB9,
egrave,
uni1EBB,
uni1EBD,
iacute,
uni1ECB,
igrave,
uni1EC9,
itilde,
oacute,
ocircumflex,
uni1ED1,
uni1ED9,
uni1ED3,
uni1ED5,
uni1ED7,
uni1ECD,
ograve,
uni1ECF,
ohorn,
uni1EDB,
uni1EE3,
uni1EDD,
uni1EDF,
uni1EE1,
otilde,
uacute,
uni1EE5,
ugrave,
uni1EE7,
uhorn,
uni1EE9,
uni1EF1,
uni1EEB,
uni1EED,
uni1EEF,
utilde,
yacute,
uni1EF5,
ygrave,
uni1EF7,
uni1EF9,
quoteleft,
quoteright
);
}
);
date = "1999-12-08 21:55:51 +0000";
familyName = Tuson;
fontMaster = (
{
customParameters = (
{
name = typoAscender;
value = 1875;
},
{
name = typoDescender;
value = -375;
},
{
name = typoLineGap;
value = 0;
},
{
name = winAscent;
value = 1875;
},
{
name = winDescent;
value = 125;
},
{
name = hheaAscender;
value = 1875;
},
{
name = hheaDescender;
value = -375;
},
{
name = strikeoutPosition;
value = 259;
},
{
name = strikeoutSize;
value = 50;
},
{
name = "prep Table Assembly";
value = "SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\012200 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 1 \012INSTCTRL[ ]	/* SetInstrExecControl */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012WCVTF[ ]	/* WriteCVTInFUnits */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01223 1 0 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01212 8 1 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 7 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01220 6 1 10 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 8 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 3 values pushed */\012832 1 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 9 \012WS[ ]	/* WriteStore */\012PUSHW[ ]	/* 3 values pushed */\01264 1 11 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01236 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 2 values pushed */\01240 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 1 value pushed */\0122048 \012GETINFO[ ]	/* GetInfo */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\01239 1 \012GETINFO[ ]	/* GetInfo */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHW[ ]	/* 3 values pushed */\0122176 1 1088 \012GETINFO[ ]	/* GetInfo */\012MUL[ ]	/* Multiply */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHW[ ]	/* 2 values pushed */\0123 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 4 values pushed */\01214 6 1 14 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHW[ ]	/* 1 value pushed */\012511 \012SCANCTRL[ ]	/* ScanConversionControl */\012PUSHB[ ]	/* 1 value pushed */\0124 \012SCANTYPE[ ]	/* ScanType */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 4 values pushed */\0125 100 6 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */";
},
{
name = "fpgm Table Assembly";
value = "PUSHB[ ]	/* 1 value pushed */\0120 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012RCVT[ ]	/* ReadCVT */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHW[ ]	/* 1 value pushed */\01214 \012LTEQ[ ]	/* LessThenOrEqual */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\0126 \012GTEQ[ ]	/* GreaterThanOrEqual */\012AND[ ]	/* LogicalAnd */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01252 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01240 \012EIF[ ]	/* EndIf */\012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0122 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 4 values pushed */\0123 20 21 0 \012WS[ ]	/* WriteStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\01219 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\0122 20 \012RS[ ]	/* ReadStore */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01237 3 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012EQ[ ]	/* Equal */\012JROT[ ]	/* JumpRelativeOnTrue */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\0124 \012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 3 values pushed */\0122 2 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01233 \012NEG[ ]	/* Negate */\012JMPR[ ]	/* Jump */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 3 values pushed */\01214 21 1 \012WS[ ]	/* WriteStore */\012JMPR[ ]	/* Jump */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01219 1 19 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 3 values pushed */\01222 1 2 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01221 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012AND[ ]	/* LogicalAnd */\012PUSHB[ ]	/* 3 values pushed */\01240 1 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012EIF[ ]	/* EndIf */\012GT[ ]	/* GreaterThan */\012OR[ ]	/* LogicalOr */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012ROLL[ ]	/* RollTopThreeStack */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01280 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01256 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01240 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01248 \012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\012192 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012FLOOR[ ]	/* Floor */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01254 \012ADD[ ]	/* Add */\012ELSE[ ]	/* Else */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01210 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012ELSE[ ]	/* Else */\012MPPEM[ ]	/* MeasurePixelPerEm */\012PUSHB[ ]	/* 1 value pushed */\01230 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01230 \012MPPEM[ ]	/* MeasurePixelPerEm */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 1 value pushed */\0124096 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01212 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121280 \012DIV[ ]	/* Divide */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012ABS[ ]	/* Absolute */\012SUB[ ]	/* Subtract */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01222 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0125 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0127 \012RS[ ]	/* ReadStore */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0127 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0126 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 2 values pushed */\0127 98 \012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 2 values pushed */\0121 13 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0125 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0128 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\01248 5 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012ADD[ ]	/* Add */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012SUB[ ]	/* Subtract */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012EIF[ ]	/* EndIf */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 3 values pushed */\0120 2 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0127 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0129 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0129 14 0 \012RS[ ]	/* ReadStore */\012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01211 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 3 values pushed */\0120 1 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01212 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01232 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01248 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01213 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ABS[ ]	/* Absolute */\012PUSHB[ ]	/* 1 value pushed */\01236 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0120 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\01264 \012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012NEG[ ]	/* Negate */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01214 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 4 values pushed */\01213 12 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01215 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 2 \012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\012100 \012SUB[ ]	/* Subtract */\012WCVTP[ ]	/* WriteCVTInPixels */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01216 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01215 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012MD[1]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0120 \012GT[ ]	/* GreaterThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01217 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012MUL[ ]	/* Multiply */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01217 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01217 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01218 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01213 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01219 \012FDEF[ ]	/* FunctionDefinition */\012MPPEM[ ]	/* MeasurePixelPerEm */\012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012MPPEM[ ]	/* MeasurePixelPerEm */\012GTEQ[ ]	/* GreaterThanOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0124 100 \012WCVTP[ ]	/* WriteCVTInPixels */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012DEPTH[ ]	/* GetDepthStack */\012PUSHB[ ]	/* 1 value pushed */\01219 \012NEG[ ]	/* Negate */\012SWAP[ ]	/* SwapTopStack */\012JROT[ ]	/* JumpRelativeOnTrue */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01220 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 18 \012RS[ ]	/* ReadStore */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01218 18 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01217 \012CALL[ ]	/* CallFunction */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01215 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01216 2 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 2 values pushed */\0121 0 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01216 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\01215 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01216 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\0120 0 \012SZP0[ ]	/* SetZonePointer0 */\012SWAP[ ]	/* SwapTopStack */\012WCVTP[ ]	/* WriteCVTInPixels */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012MIAP[0]	/* MoveIndirectAbsPt */\012PUSHB[ ]	/* 3 values pushed */\0121 1 1 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01221 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 8 values pushed */\01224 24 1 0 17 0 19 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01220 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01222 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01223 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01224 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01225 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01226 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01227 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01228 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01229 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01230 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01231 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 21 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01243 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP1[ ]	/* DeltaExceptionP1 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01244 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01222 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP2[ ]	/* DeltaExceptionP2 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01245 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01216 \012DIV[ ]	/* Divide */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\01238 \012ADD[ ]	/* Add */\012MPPEM[ ]	/* MeasurePixelPerEm */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012DELTAP3[ ]	/* DeltaExceptionP3 */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01232 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01218 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012RCVT[ ]	/* ReadCVT */\012PUSHB[ ]	/* 1 value pushed */\01214 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01213 \012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 6 values pushed */\01224 24 1 0 17 0 \012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 2 values pushed */\01220 8 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\012139 \012CALL[ ]	/* CallFunction */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01233 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01234 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01235 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01236 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0123 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01237 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0124 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01238 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0125 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01239 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0126 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01240 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0127 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01241 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0128 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01242 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0129 32 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01246 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01224 \012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012RS[ ]	/* ReadStore */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01246 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01248 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01247 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01247 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01249 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012NEQ[ ]	/* NotEqual */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01250 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01251 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 1 value pushed */\01215 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 2 values pushed */\0120 2 \012RCVT[ ]	/* ReadCVT */\012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01249 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ELSE[ ]	/* Else */\012CLEAR[ ]	/* ClearStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01252 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012SHC[1]	/* ShiftContourByLastPt */\012PUSHB[ ]	/* 1 value pushed */\0121 \012ADD[ ]	/* Add */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01253 \012FDEF[ ]	/* FunctionDefinition */\012SVTCA[0]	/* SetFreedomAndProjectionVectorToAxis */\012PUSHB[ ]	/* 2 values pushed */\01214 6 \012RCVT[ ]	/* ReadCVT */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RCVT[ ]	/* ReadCVT */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 5 values pushed */\0120 0 0 0 0 \012WCVTP[ ]	/* WriteCVTInPixels */\012MIAP[0]	/* MoveIndirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01252 1 \012SZP2[ ]	/* SetZonePointer2 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012POP[ ]	/* PopTopStack */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01254 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01255 \012FDEF[ ]	/* FunctionDefinition */\012MDAP[0]	/* MoveDirectAbsPt */\012SLOOP[ ]	/* SetLoopVariable */\012ALIGNRP[ ]	/* AlignRelativePt */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01256 \012FDEF[ ]	/* FunctionDefinition */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01214 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0120 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0121 \012RS[ ]	/* ReadStore */\012MUL[ ]	/* Multiply */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0122 0 \012SZPS[ ]	/* SetZonePointerS */\012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0121 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\01256 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012NEG[ ]	/* Negate */\012ROLL[ ]	/* RollTopThreeStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012SWAP[ ]	/* SwapTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01260 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SWAP[ ]	/* SwapTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01261 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01262 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0120 \012EQ[ ]	/* Equal */\012IF[ ]	/* If */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0126 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012CINDEX[ ]	/* CopyXToTopStack */\012MD[0]	/* MeasureDistance */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012SUB[ ]	/* Subtract */\012PUSHW[ ]	/* 2 values pushed */\0122048 2048 \012MUL[ ]	/* Multiply */\012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012IF[ ]	/* If */\012DIV[ ]	/* Divide */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012MUL[ ]	/* Multiply */\012PUSHW[ ]	/* 1 value pushed */\0121024 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012SWAP[ ]	/* SwapTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01263 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\01223 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01210 \012RS[ ]	/* ReadStore */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012ADD[ ]	/* Add */\012PUSHB[ ]	/* 1 value pushed */\01232 \012ADD[ ]	/* Add */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01264 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01265 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01266 \012FDEF[ ]	/* FunctionDefinition */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012GT[ ]	/* GreaterThan */\012ELSE[ ]	/* Else */\012LT[ ]	/* LessThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01267 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01258 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01268 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01259 \012CALL[ ]	/* CallFunction */\012ROLL[ ]	/* RollTopThreeStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012ROLL[ ]	/* RollTopThreeStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\01223 \012RS[ ]	/* ReadStore */\012IF[ ]	/* If */\012LT[ ]	/* LessThan */\012ELSE[ ]	/* Else */\012GT[ ]	/* GreaterThan */\012EIF[ ]	/* EndIf */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012EIF[ ]	/* EndIf */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01269 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012MINDEX[ ]	/* MoveXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01212 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01270 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\01210 4 \012CINDEX[ ]	/* CopyXToTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012CINDEX[ ]	/* CopyXToTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 2 values pushed */\01212 0 \012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01211 \012RS[ ]	/* ReadStore */\012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01296 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\01264 \012LTEQ[ ]	/* LessThenOrEqual */\012IF[ ]	/* If */\012PUSHB[ ]	/* 4 values pushed */\0124 32 5 32 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 4 values pushed */\0124 38 5 26 \012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012ADD[ ]	/* Add */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012DUP[ ]	/* DuplicateTopStack */\012ROLL[ ]	/* RollTopThreeStack */\012ROLL[ ]	/* RollTopThreeStack */\012SUB[ ]	/* Subtract */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012ABS[ ]	/* Absolute */\012SWAP[ ]	/* SwapTopStack */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ABS[ ]	/* Absolute */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0124 \012RS[ ]	/* ReadStore */\012SUB[ ]	/* Subtract */\012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 1 value pushed */\0125 \012RS[ ]	/* ReadStore */\012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 1 value pushed */\0123 \012CINDEX[ ]	/* CopyXToTopStack */\012PUSHB[ ]	/* 1 value pushed */\0122 \012DIV[ ]	/* Divide */\012DUP[ ]	/* DuplicateTopStack */\012PUSHB[ ]	/* 1 value pushed */\0120 \012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\01264 \012ADD[ ]	/* Add */\012EIF[ ]	/* EndIf */\012FLOOR[ ]	/* Floor */\012PUSHB[ ]	/* 1 value pushed */\0121 \012MUL[ ]	/* Multiply */\012SUB[ ]	/* Subtract */\012PUSHB[ ]	/* 1 value pushed */\0122 \012CINDEX[ ]	/* CopyXToTopStack */\012GC[0]	/* GetCoordOnPVector */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012SWAP[ ]	/* SwapTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0121 \012CALL[ ]	/* CallFunction */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01271 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 58 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01272 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 59 \012CALL[ ]	/* CallFunction */\012POP[ ]	/* PopTopStack */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012DUP[ ]	/* DuplicateTopStack */\012ALIGNRP[ ]	/* AlignRelativePt */\012PUSHB[ ]	/* 1 value pushed */\0126 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012SWAP[ ]	/* SwapTopStack */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0126 \012RS[ ]	/* ReadStore */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01248 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01273 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01274 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZP2[ ]	/* SetZonePointer2 */\012DUP[ ]	/* DuplicateTopStack */\012GC[1]	/* GetCoordOnPVector */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 3 values pushed */\0120 1 1 \012SZP2[ ]	/* SetZonePointer2 */\012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 1 value pushed */\01254 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01275 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 1 \012SZP1[ ]	/* SetZonePointer1 */\012SZP0[ ]	/* SetZonePointer0 */\012PUSHB[ ]	/* 1 value pushed */\01255 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01276 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01257 \012LOOPCALL[ ]	/* LoopAndCallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01277 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012RCVT[ ]	/* ReadCVT */\012SWAP[ ]	/* SwapTopStack */\012DUP[ ]	/* DuplicateTopStack */\012MDAP[0]	/* MoveDirectAbsPt */\012DUP[ ]	/* DuplicateTopStack */\012GC[0]	/* GetCoordOnPVector */\012ROLL[ ]	/* RollTopThreeStack */\012SWAP[ ]	/* SwapTopStack */\012SUB[ ]	/* Subtract */\012SHPIX[ ]	/* ShiftZoneByPixel */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01278 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01210 \012SWAP[ ]	/* SwapTopStack */\012WS[ ]	/* WriteStore */\012PUSHB[ ]	/* 1 value pushed */\01277 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01279 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01280 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01281 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01282 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 70 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01283 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01284 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01285 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01286 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 71 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01287 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01288 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01289 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01290 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01291 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01292 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01293 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01294 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 67 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01295 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01296 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01297 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01298 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 69 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\01299 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012100 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0120 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012101 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 0 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012102 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\0121 1 72 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012103 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012104 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012105 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012106 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 0 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012107 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012108 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0120 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012109 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 0 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012110 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 4 values pushed */\0121 1 1 68 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012111 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012112 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012113 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012114 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0120 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012115 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012116 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012117 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\0120 \012SZPS[ ]	/* SetZonePointerS */\012PUSHB[ ]	/* 2 values pushed */\0121 60 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012118 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012119 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012120 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012121 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012122 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012123 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012124 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 61 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012125 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012126 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012127 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012128 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012129 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012130 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012131 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 62 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012132 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012MDAP[0]	/* MoveDirectAbsPt */\012PUSHB[ ]	/* 2 values pushed */\01248 1 \012SZP1[ ]	/* SetZonePointer1 */\012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012133 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012134 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012135 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0120 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012136 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01264 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012137 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01265 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012138 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 2 values pushed */\0121 63 \012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\01266 \012CALL[ ]	/* CallFunction */\012ENDF[ ]	/* EndFunctionDefinition */\012PUSHB[ ]	/* 1 value pushed */\012139 \012FDEF[ ]	/* FunctionDefinition */\012PUSHB[ ]	/* 3 values pushed */\01211 0 3 \012RCVT[ ]	/* ReadCVT */\012LT[ ]	/* LessThan */\012IF[ ]	/* If */\012PUSHB[ ]	/* 1 value pushed */\0126 \012ELSE[ ]	/* Else */\012PUSHB[ ]	/* 3 values pushed */\0124 2 3 \012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012SWAP[ ]	/* SwapTopStack */\012POP[ ]	/* PopTopStack */\012ELSE[ ]	/* Else */\012POP[ ]	/* PopTopStack */\012EIF[ ]	/* EndIf */\012EIF[ ]	/* EndIf */\012WS[ ]	/* WriteStore */\012CALL[ ]	/* CallFunction */\012PUSHB[ ]	/* 1 value pushed */\0128 \012NEG[ ]	/* Negate */\012PUSHB[ ]	/* 1 value pushed */\0123 \012DEPTH[ ]	/* GetDepthStack */\012LT[ ]	/* LessThan */\012JROT[ ]	/* JumpRelativeOnTrue */\012PUSHB[ ]	/* 2 values pushed */\0125 1 \012SZP2[ ]	/* SetZonePointer2 */\012RCVT[ ]	/* ReadCVT */\012IF[ ]	/* If */\012IUP[0]	/* InterpolateUntPts */\012EIF[ ]	/* EndIf */\012ENDF[ ]	/* EndFunctionDefinition */";
},
{
name = "CVT Table";
value = "(\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    0,\012    125,\012    125,\012    125,\012    125,\012    1000,\012    0,\012    1000,\012    750,\012    0,\012    \"-250\",\012    1000,\012    0,\012    1000,\012    750,\012    0,\012    \"-250\"\012)";
}
);
id = m01;
metricValues = (
{
pos = 1875;
},
{
pos = 1000;
},
{
},
{
},
{
pos = -375;
},
{
}
);
name = Regular;
}
);
glyphs = (
{
glyphname = .notdef;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(438,750,l),
(63,750,l),
(63,0,l),
(438,0,l)
);
},
{
closed = 1;
nodes = (
(125,688,l),
(375,688,l),
(375,63,l),
(125,63,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 45 values pushed */
0 0 0 2 3 0 2 103 5 1 3 1 1 3 87 5 1 3 3 1 95 4 1 1 3 1 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 6 23 
CALL[ ]	/* CallFunction */";
};
width = 500;
}
);
note = ".notdef";
},
{
glyphname = .null;
layers = (
{
layerId = m01;
width = 0;
}
);
note = ".null";
},
{
glyphname = CR;
layers = (
{
layerId = m01;
width = 375;
}
);
note = CR;
},
{
glyphname = space;
layers = (
{
layerId = m01;
width = 250;
}
);
note = space;
unicode = 32;
},
{
glyphname = exclam;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
}
);
width = 250;
}
);
note = exclam;
unicode = 33;
},
{
glyphname = quotedbl;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
}
);
width = 625;
}
);
note = quotedbl;
unicode = 34;
},
{
glyphname = numbersign;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
}
);
width = 750;
}
);
note = numbersign;
unicode = 35;
},
{
glyphname = dollar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(500,500,l),
(375,500,l),
(375,375,l),
(500,375,l),
(500,125,l),
(375,125,l),
(375,250,l),
(250,250,l),
(250,125,l),
(375,125,l),
(375,0,l),
(0,0,l),
(0,125,l),
(125,125,l),
(125,250,l),
(0,250,l),
(0,500,l),
(125,500,l),
(125,375,l),
(250,375,l),
(250,500,l),
(125,500,l),
(125,625,l),
(500,625,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 62 values pushed */
12 1 11 10 1 0 2 11 0 103 0 2 7 1 3 8 2 3 103 9 1 1 0 8 4 1 8 103 6 1 4 4 5 96 0 5 5 15 5 78 0 0 0 23 0 23 22 21 20 19 17 17 17 17 17 17 17 17 17 13 7 31 
CALL[ ]	/* CallFunction */";
};
width = 625;
}
);
note = dollar;
unicode = 36;
},
{
glyphname = percent;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 750;
}
);
note = percent;
unicode = 37;
},
{
glyphname = ampersand;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
}
);
width = 750;
}
);
note = ampersand;
unicode = 38;
},
{
glyphname = quotesingle;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
}
);
width = 375;
}
);
note = quotesingle;
unicode = 39;
},
{
glyphname = parenleft;
layers = (
{
layerId = m01;
shapes = (
{
pos = (250,-250);
ref = pixel;
},
{
pos = (125,-125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
}
);
width = 500;
}
);
note = parenleft;
unicode = 40;
},
{
glyphname = parenright;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-250);
ref = pixel;
},
{
pos = (125,-125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (0,1125);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (250,750);
ref = pixel;
}
);
width = 500;
}
);
note = parenright;
unicode = 41;
},
{
glyphname = asterisk;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
}
);
width = 500;
}
);
note = asterisk;
unicode = 42;
},
{
glyphname = plus;
layers = (
{
layerId = m01;
shapes = (
{
pos = (250,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
}
);
width = 750;
}
);
note = plus;
unicode = 43;
},
{
glyphname = comma;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (0,-125);
ref = pixel;
}
);
width = 375;
}
);
note = comma;
unicode = 44;
},
{
glyphname = hyphen;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
}
);
width = 500;
}
);
note = hyphen;
unicode = (45,8208);
},
{
glyphname = period;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
}
);
width = 250;
}
);
note = period;
unicode = 46;
},
{
glyphname = slash;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
}
);
width = 750;
}
);
note = slash;
unicode = 47;
},
{
glyphname = zero;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
}
);
width = 625;
}
);
note = zero;
unicode = 48;
},
{
glyphname = one;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
}
);
width = 375;
}
);
note = one;
unicode = 49;
},
{
glyphname = two;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
}
);
width = 625;
}
);
note = two;
unicode = 50;
},
{
glyphname = three;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
}
);
width = 625;
}
);
note = three;
unicode = 51;
},
{
glyphname = four;
layers = (
{
layerId = m01;
shapes = (
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,750);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
}
);
width = 750;
}
);
note = four;
unicode = 52;
},
{
glyphname = five;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
}
);
width = 750;
}
);
note = five;
unicode = 53;
},
{
glyphname = six;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
}
);
width = 625;
}
);
note = six;
unicode = 54;
},
{
glyphname = seven;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
}
);
width = 625;
}
);
note = seven;
unicode = 55;
},
{
glyphname = eight;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
}
);
width = 625;
}
);
note = eight;
unicode = 56;
},
{
glyphname = nine;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
}
);
width = 625;
}
);
note = nine;
unicode = 57;
},
{
glyphname = colon;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
}
);
width = 250;
}
);
note = colon;
unicode = 58;
},
{
glyphname = semicolon;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,-125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
}
);
width = 375;
}
);
note = semicolon;
unicode = 59;
},
{
glyphname = less;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (1500,-1375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
}
);
width = 625;
}
);
note = less;
unicode = 60;
},
{
glyphname = equal;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
}
);
width = 500;
}
);
note = equal;
unicode = 61;
},
{
glyphname = greater;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
}
);
width = 625;
}
);
note = greater;
unicode = 62;
},
{
glyphname = question;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
}
);
width = 625;
}
);
note = question;
unicode = 63;
},
{
glyphname = A;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (625,0);
ref = pixel;
},
{
pos = (625,125);
ref = pixel;
},
{
pos = (625,250);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (250,750);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
}
);
width = 875;
}
);
note = A;
unicode = 65;
},
{
glyphname = B;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
}
);
width = 750;
}
);
note = B;
unicode = 66;
},
{
glyphname = C;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
}
);
width = 750;
}
);
note = C;
unicode = 67;
},
{
glyphname = D;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
}
);
width = 750;
}
);
note = D;
unicode = 68;
},
{
glyphname = E;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
}
);
width = 625;
}
);
note = E;
unicode = 69;
},
{
glyphname = F;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
}
);
width = 625;
}
);
note = F;
unicode = 70;
},
{
glyphname = G;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
}
);
width = 750;
}
);
note = G;
unicode = 71;
},
{
glyphname = H;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
}
);
width = 750;
}
);
note = H;
unicode = 72;
},
{
glyphname = I;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
}
);
width = 250;
}
);
note = I;
unicode = 73;
},
{
glyphname = J;
lastChange = "2024-02-22 15:03:35 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
alignment = -1;
pos = (125,0);
ref = pixel;
},
{
alignment = -1;
pos = (250,0);
ref = pixel;
},
{
alignment = -1;
pos = (0,250);
ref = pixel;
}
);
width = 625;
}
);
note = J;
unicode = 74;
changeCount = 11;
},
{
glyphname = K;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,750);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
}
);
width = 750;
}
);
note = K;
unicode = 75;
},
{
glyphname = L;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = L;
unicode = 76;
},
{
glyphname = M;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (625,500);
ref = pixel;
},
{
pos = (625,625);
ref = pixel;
},
{
pos = (750,875);
ref = pixel;
},
{
pos = (750,750);
ref = pixel;
},
{
pos = (750,625);
ref = pixel;
},
{
pos = (750,500);
ref = pixel;
},
{
pos = (750,375);
ref = pixel;
},
{
pos = (750,250);
ref = pixel;
},
{
pos = (750,125);
ref = pixel;
},
{
pos = (750,0);
ref = pixel;
}
);
width = 1000;
}
);
note = M;
unicode = 77;
},
{
glyphname = N;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
}
);
width = 750;
}
);
note = N;
unicode = 78;
},
{
glyphname = O;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 750;
}
);
note = O;
unicode = 79;
},
{
glyphname = P;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
}
);
width = 750;
}
);
note = P;
unicode = 80;
},
{
glyphname = Q;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
}
);
width = 750;
}
);
note = Q;
unicode = 81;
},
{
glyphname = R;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
}
);
width = 750;
}
);
note = R;
unicode = 82;
},
{
glyphname = S;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
}
);
width = 750;
}
);
note = S;
unicode = 83;
},
{
glyphname = T;
layers = (
{
layerId = m01;
shapes = (
{
pos = (250,0);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,750);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
}
);
width = 750;
}
);
note = T;
unicode = 84;
},
{
glyphname = U;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
}
);
width = 750;
}
);
note = U;
unicode = 85;
},
{
glyphname = V;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (625,625);
ref = pixel;
},
{
pos = (625,750);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = V;
unicode = 86;
},
{
glyphname = W;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (625,250);
ref = pixel;
},
{
pos = (625,375);
ref = pixel;
},
{
pos = (625,500);
ref = pixel;
},
{
pos = (750,625);
ref = pixel;
},
{
pos = (750,750);
ref = pixel;
},
{
pos = (750,875);
ref = pixel;
}
);
width = 1000;
}
);
note = W;
unicode = 87;
},
{
glyphname = X;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
}
);
width = 750;
}
);
note = X;
unicode = 88;
},
{
glyphname = Y;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
}
);
width = 750;
}
);
note = Y;
unicode = 89;
},
{
glyphname = Z;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
}
);
width = 625;
}
);
note = Z;
unicode = 90;
},
{
glyphname = bracketleft;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
}
);
width = 375;
}
);
note = bracketleft;
unicode = 91;
},
{
glyphname = backslash;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
}
);
width = 750;
}
);
note = backslash;
unicode = 92;
},
{
glyphname = bracketright;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
ref = pixel;
}
);
width = 375;
}
);
note = bracketright;
unicode = 93;
},
{
glyphname = asciicircum;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,750);
ref = pixel;
}
);
width = 500;
}
);
note = asciicircum;
unicode = 94;
},
{
glyphname = underscore;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = underscore;
unicode = 95;
},
{
glyphname = grave;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,1000,l),
(0,1000,l),
(0,1125,l),
(125,1125,l)
);
},
{
closed = 1;
nodes = (
(125,1000,l),
(250,1000,l),
(250,875,l),
(125,875,l)
);
}
);
userData = {
assembly = "PUSHB[ ]	/* 2 values pushed */
6 100 
WCVTP[ ]	/* WriteCVTInPixels */
NPUSHB[ ]	/* 44 values pushed */
4 1 1 0 0 2 1 0 103 0 2 3 3 2 87 0 2 2 3 95 5 1 3 2 3 79 4 4 0 0 4 7 4 7 6 5 0 3 0 3 17 6 7 23 
CALL[ ]	/* CallFunction */
PUSHB[ ]	/* 2 values pushed */
6 0 
WCVTP[ ]	/* WriteCVTInPixels */";
};
width = 375;
}
);
note = grave;
unicode = 96;
},
{
glyphname = a;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
}
);
width = 750;
}
);
note = a;
unicode = 97;
},
{
glyphname = b;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
ref = pixel;
}
);
width = 625;
}
);
note = b;
unicode = 98;
},
{
glyphname = c;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
}
);
width = 625;
}
);
note = c;
unicode = 99;
},
{
glyphname = d;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = d;
unicode = 100;
},
{
glyphname = e;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
}
);
width = 625;
}
);
note = e;
unicode = 101;
},
{
glyphname = f;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
}
);
width = 500;
}
);
note = f;
unicode = 102;
},
{
glyphname = g;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,-125);
ref = pixel;
},
{
pos = (250,-375);
ref = pixel;
},
{
pos = (125,-375);
ref = pixel;
},
{
pos = (375,-250);
ref = pixel;
},
{
pos = (0,-250);
ref = pixel;
}
);
width = 625;
}
);
note = g;
unicode = 103;
},
{
glyphname = h;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = h;
unicode = 104;
},
{
glyphname = i;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
}
);
width = 250;
}
);
note = i;
unicode = 105;
},
{
glyphname = j;
lastChange = "2024-02-22 15:00:33 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,-125);
ref = pixel;
},
{
alignment = -1;
pos = (0,-375);
ref = pixel;
},
{
alignment = -1;
pos = (125,-250);
ref = pixel;
}
);
width = 375;
}
);
note = j;
unicode = 106;
changeCount = 3;
},
{
glyphname = k;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
}
);
width = 625;
}
);
note = k;
unicode = 107;
},
{
glyphname = l;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
}
);
width = 250;
}
);
note = l;
unicode = 108;
},
{
glyphname = m;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (625,625);
ref = pixel;
},
{
pos = (750,500);
ref = pixel;
},
{
pos = (750,375);
ref = pixel;
},
{
pos = (750,250);
ref = pixel;
},
{
pos = (750,125);
ref = pixel;
},
{
pos = (750,0);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
}
);
width = 1000;
}
);
note = m;
unicode = 109;
},
{
glyphname = n;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = n;
unicode = 110;
},
{
glyphname = o;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
}
);
width = 625;
}
);
note = o;
unicode = 111;
},
{
glyphname = p;
lastChange = "2024-02-22 15:00:47 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (0,-125);
ref = pixel;
},
{
pos = (0,-250);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
alignment = -1;
pos = (0,-375);
ref = pixel;
}
);
width = 625;
}
);
note = p;
unicode = 112;
changeCount = 1;
},
{
glyphname = q;
lastChange = "2024-02-22 15:00:52 +0000";
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,-125);
ref = pixel;
},
{
pos = (375,-250);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
alignment = -1;
pos = (375,-375);
ref = pixel;
}
);
width = 625;
}
);
note = q;
unicode = 113;
changeCount = 1;
},
{
glyphname = r;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
}
);
width = 500;
}
);
note = r;
unicode = 114;
},
{
glyphname = s;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
ref = pixel;
}
);
width = 625;
}
);
note = s;
unicode = 115;
},
{
glyphname = t;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
}
);
width = 500;
}
);
note = t;
unicode = 116;
},
{
glyphname = u;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
}
);
width = 625;
}
);
note = u;
unicode = 117;
},
{
glyphname = v;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = v;
unicode = 118;
},
{
glyphname = w;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,0);
ref = pixel;
},
{
pos = (625,250);
ref = pixel;
},
{
pos = (625,375);
ref = pixel;
},
{
pos = (750,500);
ref = pixel;
},
{
pos = (750,625);
ref = pixel;
}
);
width = 1000;
}
);
note = w;
unicode = 119;
},
{
glyphname = x;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = x;
unicode = 120;
},
{
glyphname = y;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,-125);
ref = pixel;
},
{
pos = (375,-250);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (250,-375);
ref = pixel;
},
{
pos = (125,-375);
ref = pixel;
},
{
pos = (0,-250);
ref = pixel;
}
);
width = 625;
}
);
note = y;
unicode = 121;
},
{
glyphname = z;
layers = (
{
layerId = m01;
shapes = (
{
pos = (375,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
}
);
width = 625;
}
);
note = z;
unicode = 122;
},
{
glyphname = braceleft;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
}
);
width = 500;
}
);
note = braceleft;
unicode = 123;
},
{
glyphname = bar;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(125,625,l),
(125,0,l),
(0,0,l),
(0,625,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 16 values pushed */
0 1 1 0 95 0 0 0 15 0 78 17 16 2 7 24 
CALL[ ]	/* CallFunction */";
};
width = 250;
}
);
note = bar;
unicode = 124;
},
{
glyphname = braceright;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
}
);
width = 500;
}
);
note = braceright;
unicode = 125;
},
{
glyphname = asciitilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (625,500);
ref = pixel;
}
);
width = 875;
}
);
note = asciitilde;
unicode = 126;
},
{
glyphname = uni00A0;
layers = (
{
layerId = m01;
width = 500;
}
);
note = uni00A0;
unicode = 160;
},
{
glyphname = pixel;
layers = (
{
layerId = m01;
shapes = (
{
closed = 1;
nodes = (
(0,0,l),
(125,0,l),
(125,125,l),
(0,125,l)
);
}
);
userData = {
assembly = "NPUSHB[ ]	/* 22 values pushed */
2 1 1 1 0 95 0 0 0 15 0 78 0 0 0 3 0 3 17 3 7 23 
CALL[ ]	/* CallFunction */";
};
width = 125;
}
);
note = pixel;
},
{
glyphname = Aacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
}
);
width = 875;
}
);
note = Aacute;
unicode = 193;
},
{
glyphname = Abreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
}
);
width = 875;
}
);
note = Abreve;
unicode = 258;
},
{
glyphname = uni1EAE;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (500,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EAE;
unicode = 7854;
},
{
glyphname = uni1EB6;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (375,-250);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EB6;
unicode = 7862;
},
{
glyphname = uni1EB0;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (250,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EB0;
unicode = 7856;
},
{
glyphname = uni1EB2;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (500,1750);
ref = pixel;
},
{
pos = (625,1625);
ref = pixel;
},
{
pos = (625,1500);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EB2;
unicode = 7858;
},
{
glyphname = uni1EB4;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (125,1500);
ref = pixel;
},
{
pos = (250,1625);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (500,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EB4;
unicode = 7860;
},
{
glyphname = Acircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
}
);
width = 875;
}
);
note = Acircumflex;
unicode = 194;
},
{
glyphname = uni1EA4;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (500,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EA4;
unicode = 7844;
},
{
glyphname = uni1EAC;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
},
{
pos = (375,-250);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EAC;
unicode = 7852;
},
{
glyphname = uni1EA6;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (250,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EA6;
unicode = 7846;
},
{
glyphname = uni1EA8;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
},
{
pos = (500,1500);
ref = pixel;
},
{
pos = (375,1750);
ref = pixel;
},
{
pos = (500,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EA8;
unicode = 7848;
},
{
glyphname = uni1EAA;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
},
{
pos = (125,1500);
ref = pixel;
},
{
pos = (250,1625);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (500,1625);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EAA;
unicode = 7850;
},
{
glyphname = uni1EA0;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (375,-250);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EA0;
unicode = 7840;
},
{
glyphname = Agrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
}
);
width = 875;
}
);
note = Agrave;
unicode = 192;
},
{
glyphname = uni1EA2;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (500,1125);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EA2;
unicode = 7842;
},
{
glyphname = Atilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = A;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
}
);
width = 875;
}
);
note = Atilde;
unicode = 195;
},
{
glyphname = Dcroat;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (125,125);
ref = pixel;
},
{
pos = (125,250);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (125,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (625,625);
ref = pixel;
},
{
pos = (625,500);
ref = pixel;
},
{
pos = (625,375);
ref = pixel;
},
{
pos = (625,250);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
}
);
width = 875;
}
);
note = Dcroat;
unicode = 272;
},
{
glyphname = Eacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
}
);
width = 625;
}
);
note = Eacute;
unicode = 201;
},
{
glyphname = Ecircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
}
);
width = 625;
}
);
note = Ecircumflex;
unicode = 202;
},
{
glyphname = uni1EBE;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (375,1625);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EBE;
unicode = 7870;
},
{
glyphname = uni1EC6;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC6;
unicode = 7878;
},
{
glyphname = uni1EC0;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (125,1625);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC0;
unicode = 7872;
},
{
glyphname = uni1EC2;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (375,1625);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (250,1750);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC2;
unicode = 7874;
},
{
glyphname = uni1EC4;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (0,1500);
ref = pixel;
},
{
pos = (125,1625);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (375,1625);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC4;
unicode = 7876;
},
{
glyphname = uni1EB8;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EB8;
unicode = 7864;
},
{
glyphname = Egrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
}
);
width = 625;
}
);
note = Egrave;
unicode = 200;
},
{
glyphname = uni1EBA;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EBA;
unicode = 7866;
},
{
glyphname = uni1EBC;
layers = (
{
layerId = m01;
shapes = (
{
ref = E;
},
{
pos = (0,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EBC;
unicode = 7868;
},
{
glyphname = Iacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
}
);
width = 250;
}
);
note = Iacute;
unicode = 205;
},
{
glyphname = uni1ECA;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (0,-250);
ref = pixel;
}
);
width = 250;
}
);
note = uni1ECA;
unicode = 7882;
},
{
glyphname = Igrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = I;
},
{
pos = (0,1125);
ref = pixel;
},
{
pos = (-125,1250);
ref = pixel;
}
);
width = 250;
}
);
note = Igrave;
unicode = 204;
},
{
glyphname = uni1EC8;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
},
{
pos = (0,1375);
ref = pixel;
}
);
width = 375;
}
);
note = uni1EC8;
unicode = 7880;
},
{
glyphname = Itilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (-125,1125);
ref = pixel;
},
{
pos = (0,1250);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
}
);
width = 250;
}
);
note = Itilde;
unicode = 296;
},
{
glyphname = Oacute;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Oacute;
unicode = 211;
},
{
glyphname = Ocircumflex;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
}
);
width = 750;
}
);
note = Ocircumflex;
unicode = 212;
},
{
glyphname = uni1ED0;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (375,1625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ED0;
unicode = 7888;
},
{
glyphname = uni1ED8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ED8;
unicode = 7896;
},
{
glyphname = uni1ED2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (125,1625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ED2;
unicode = 7890;
},
{
glyphname = uni1ED4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (375,1625);
ref = pixel;
},
{
pos = (250,1750);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ED4;
unicode = 7892;
},
{
glyphname = uni1ED6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (0,1500);
ref = pixel;
},
{
pos = (125,1625);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (375,1625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ED6;
unicode = 7894;
},
{
glyphname = uni1ECC;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ECC;
unicode = 7884;
},
{
glyphname = Ograve;
layers = (
{
layerId = m01;
shapes = (
{
ref = O;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Ograve;
unicode = 210;
},
{
glyphname = uni1ECE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1ECE;
unicode = 7886;
},
{
glyphname = Ohorn;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 750;
}
);
note = Ohorn;
unicode = 416;
},
{
glyphname = uni1EDA;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EDA;
unicode = 7898;
},
{
glyphname = uni1EE2;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EE2;
unicode = 7906;
},
{
glyphname = uni1EDC;
layers = (
{
layerId = m01;
shapes = (
{
ref = Ohorn;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EDC;
unicode = 7900;
},
{
glyphname = uni1EDE;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1375);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EDE;
unicode = 7902;
},
{
glyphname = uni1EE0;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EE0;
unicode = 7904;
},
{
glyphname = Otilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (500,750);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (500,500);
ref = pixel;
},
{
pos = (500,375);
ref = pixel;
},
{
pos = (500,250);
ref = pixel;
},
{
pos = (500,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Otilde;
unicode = 213;
},
{
glyphname = Uacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Uacute;
unicode = 218;
},
{
glyphname = uni1EE4;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EE4;
unicode = 7908;
},
{
glyphname = Ugrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Ugrave;
unicode = 217;
},
{
glyphname = uni1EE6;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1375);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EE6;
unicode = 7910;
},
{
glyphname = Uhorn;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = Uhorn;
unicode = 431;
},
{
glyphname = uni1EE8;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EE8;
unicode = 7912;
},
{
glyphname = uni1EF0;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,-250);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EF0;
unicode = 7920;
},
{
glyphname = uni1EEA;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EEA;
unicode = 7914;
},
{
glyphname = uni1EEC;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1375);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EEC;
unicode = 7916;
},
{
glyphname = uni1EEE;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (250,1375);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
},
{
pos = (500,1375);
ref = pixel;
},
{
pos = (625,875);
ref = pixel;
}
);
width = 875;
}
);
note = uni1EEE;
unicode = 7918;
},
{
glyphname = Utilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = U;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Utilde;
unicode = 360;
},
{
glyphname = Yacute;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Yacute;
unicode = 221;
},
{
glyphname = uni1EF4;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EF4;
unicode = 7924;
},
{
glyphname = Ygrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = Y;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
}
);
width = 750;
}
);
note = Ygrave;
unicode = 7922;
},
{
glyphname = uni1EF6;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EF6;
unicode = 7926;
},
{
glyphname = uni1EF8;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (250,500);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (250,250);
ref = pixel;
},
{
pos = (250,125);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (500,875);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1125);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EF8;
unicode = 7928;
},
{
glyphname = aacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 750;
}
);
note = aacute;
unicode = 225;
},
{
glyphname = abreve;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 750;
}
);
note = abreve;
unicode = 259;
},
{
glyphname = uni1EAF;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EAF;
unicode = 7855;
},
{
glyphname = uni1EB7;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EB7;
unicode = 7863;
},
{
glyphname = uni1EB1;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EB1;
unicode = 7857;
},
{
glyphname = uni1EB3;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (500,1250);
ref = pixel;
},
{
pos = (375,1500);
ref = pixel;
},
{
pos = (500,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EB3;
unicode = 7859;
},
{
glyphname = uni1EB5;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (0,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EB5;
unicode = 7861;
},
{
glyphname = acircumflex;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
}
);
width = 750;
}
);
note = acircumflex;
unicode = 226;
},
{
glyphname = uni1EA5;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EA5;
unicode = 7845;
},
{
glyphname = uni1EAD;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,-250);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EAD;
unicode = 7853;
},
{
glyphname = uni1EA7;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EA7;
unicode = 7847;
},
{
glyphname = uni1EA9;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EA9;
unicode = 7849;
},
{
glyphname = uni1EAB;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (0,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EAB;
unicode = 7851;
},
{
glyphname = uni1EA1;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EA1;
unicode = 7841;
},
{
glyphname = agrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 750;
}
);
note = agrave;
unicode = 224;
},
{
glyphname = uni1EA3;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EA3;
unicode = 7843;
},
{
glyphname = atilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = a;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 750;
}
);
note = atilde;
unicode = 227;
},
{
glyphname = dcroat;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (375,750);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
}
);
width = 625;
}
);
note = dcroat;
unicode = 273;
},
{
glyphname = eacute;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 625;
}
);
note = eacute;
unicode = 233;
},
{
glyphname = ecircumflex;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
}
);
width = 625;
}
);
note = ecircumflex;
unicode = 234;
},
{
glyphname = uni1EBF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EBF;
unicode = 7871;
},
{
glyphname = uni1EC7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC7;
unicode = 7879;
},
{
glyphname = uni1EC1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC1;
unicode = 7873;
},
{
glyphname = uni1EC3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC3;
unicode = 7875;
},
{
glyphname = uni1EC5;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (0,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EC5;
unicode = 7877;
},
{
glyphname = uni1EB9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EB9;
unicode = 7865;
},
{
glyphname = egrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = e;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
}
);
width = 625;
}
);
note = egrave;
unicode = 232;
},
{
glyphname = uni1EBB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EBB;
unicode = 7867;
},
{
glyphname = uni1EBD;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (250,375);
ref = pixel;
},
{
pos = (125,375);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EBD;
unicode = 7869;
},
{
glyphname = iacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 250;
}
);
note = iacute;
unicode = 237;
},
{
glyphname = uni1ECB;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (0,-250);
ref = pixel;
}
);
width = 250;
}
);
note = uni1ECB;
unicode = 7883;
},
{
glyphname = igrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (-125,1000);
ref = pixel;
}
);
width = 250;
}
);
note = igrave;
unicode = 236;
},
{
glyphname = uni1EC9;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (0,1000);
ref = pixel;
}
);
width = 375;
}
);
note = uni1EC9;
unicode = 7881;
},
{
glyphname = itilde;
layers = (
{
layerId = m01;
shapes = (
{
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (-125,1125);
ref = pixel;
},
{
pos = (0,1250);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
}
);
width = 250;
}
);
note = itilde;
unicode = 297;
},
{
glyphname = oacute;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 625;
}
);
note = oacute;
unicode = 243;
},
{
glyphname = ocircumflex;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
}
);
width = 625;
}
);
note = ocircumflex;
unicode = 244;
},
{
glyphname = uni1ED1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ED1;
unicode = 7889;
},
{
glyphname = uni1ED9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ED9;
unicode = 7897;
},
{
glyphname = uni1ED3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1250);
ref = pixel;
},
{
pos = (125,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ED3;
unicode = 7891;
},
{
glyphname = uni1ED5;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (250,1500);
ref = pixel;
},
{
pos = (375,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ED5;
unicode = 7893;
},
{
glyphname = uni1ED7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (125,1250);
ref = pixel;
},
{
pos = (250,1375);
ref = pixel;
},
{
pos = (375,1250);
ref = pixel;
},
{
pos = (500,1375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ED7;
unicode = 7895;
},
{
glyphname = uni1ECD;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ECD;
unicode = 7885;
},
{
glyphname = ograve;
layers = (
{
layerId = m01;
shapes = (
{
ref = o;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
}
);
width = 625;
}
);
note = ograve;
unicode = 242;
},
{
glyphname = uni1ECF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 625;
}
);
note = uni1ECF;
unicode = 7887;
},
{
glyphname = ohorn;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = ohorn;
unicode = 417;
},
{
glyphname = uni1EDB;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EDB;
unicode = 7899;
},
{
glyphname = uni1EE3;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EE3;
unicode = 7907;
},
{
glyphname = uni1EDD;
layers = (
{
layerId = m01;
shapes = (
{
ref = ohorn;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EDD;
unicode = 7901;
},
{
glyphname = uni1EDF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (375,875);
ref = pixel;
},
{
pos = (250,1125);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EDF;
unicode = 7903;
},
{
glyphname = uni1EE1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EE1;
unicode = 7905;
},
{
glyphname = otilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (125,625);
ref = pixel;
},
{
pos = (250,625);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 625;
}
);
note = otilde;
unicode = 245;
},
{
glyphname = uacute;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 625;
}
);
note = uacute;
unicode = 250;
},
{
glyphname = uni1EE5;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EE5;
unicode = 7909;
},
{
glyphname = ugrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = u;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 625;
}
);
note = ugrave;
unicode = 249;
},
{
glyphname = uni1EE7;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EE7;
unicode = 7911;
},
{
glyphname = uhorn;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = uhorn;
unicode = 432;
},
{
glyphname = uni1EE9;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EE9;
unicode = 7913;
},
{
glyphname = uni1EF1;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (250,-250);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EF1;
unicode = 7921;
},
{
glyphname = uni1EEB;
layers = (
{
layerId = m01;
shapes = (
{
ref = uhorn;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EEB;
unicode = 7915;
},
{
glyphname = uni1EED;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EED;
unicode = 7917;
},
{
glyphname = uni1EEF;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
},
{
pos = (500,625);
ref = pixel;
}
);
width = 750;
}
);
note = uni1EEF;
unicode = 7919;
},
{
glyphname = utilde;
layers = (
{
layerId = m01;
shapes = (
{
pos = (0,500);
ref = pixel;
},
{
pos = (0,375);
ref = pixel;
},
{
pos = (0,250);
ref = pixel;
},
{
pos = (0,125);
ref = pixel;
},
{
pos = (125,0);
ref = pixel;
},
{
pos = (250,0);
ref = pixel;
},
{
pos = (375,0);
ref = pixel;
},
{
pos = (375,125);
ref = pixel;
},
{
pos = (375,250);
ref = pixel;
},
{
pos = (375,375);
ref = pixel;
},
{
pos = (375,500);
ref = pixel;
},
{
pos = (375,625);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 625;
}
);
note = utilde;
unicode = 361;
},
{
glyphname = yacute;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 625;
}
);
note = yacute;
unicode = 253;
},
{
glyphname = uni1EF5;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (500,-375);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EF5;
unicode = 7925;
},
{
glyphname = ygrave;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
}
);
width = 625;
}
);
note = ygrave;
unicode = 7923;
},
{
glyphname = uni1EF7;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (125,1125);
ref = pixel;
},
{
pos = (250,1000);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EF7;
unicode = 7927;
},
{
glyphname = uni1EF9;
layers = (
{
layerId = m01;
shapes = (
{
ref = y;
},
{
pos = (0,875);
ref = pixel;
},
{
pos = (125,1000);
ref = pixel;
},
{
pos = (250,875);
ref = pixel;
},
{
pos = (375,1000);
ref = pixel;
}
);
width = 625;
}
);
note = uni1EF9;
unicode = 7929;
},
{
glyphname = quoteleft;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,875);
ref = pixel;
},
{
pos = (125,750);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
}
);
width = 375;
}
);
note = quoteleft;
unicode = 8216;
},
{
glyphname = quoteright;
layers = (
{
layerId = m01;
shapes = (
{
pos = (125,750);
ref = pixel;
},
{
pos = (125,875);
ref = pixel;
},
{
pos = (0,625);
ref = pixel;
}
);
width = 375;
}
);
note = quoteright;
unicode = 8217;
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
properties = (
{
key = postscriptFullName;
value = Tuson;
},
{
key = postscriptFontName;
value = Tuson;
}
);
}
);
metrics = (
{
type = ascender;
},
{
type = "cap height";
},
{
type = "x-height";
},
{
type = baseline;
},
{
type = descender;
},
{
type = "italic angle";
}
);
properties = (
{
key = copyrights;
values = (
{
language = ENG;
value = "1999 / yuji oshimoto  / 04@jp.org / www.04.jp.org";
}
);
}
);
settings = {
disablesAutomaticAlignment = 1;
disablesNiceNames = 1;
gridLength = 125;
};
unitsPerEm = 1000;
versionMajor = 1;
versionMinor = 0;
}
